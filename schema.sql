DROP TABLE IF EXISTS authors;
CREATE TABLE authors (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	name TEXT,
	bio TEXT
);

DROP TABLE IF EXISTS pages; 
CREATE TABLE pages (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	title TEXT,
	body TEXT,
	a_id INTEGER,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TRIGGER timestamp_update_a BEFORE UPDATE ON pages BEGIN UPDATE pages SET updated_at = CURRENT_TIMESTAMP WHERE id = new.id;
END;


DROP TABLE IF EXISTS sections; 
CREATE TABLE sections (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	subtitle TEXT, 
	sub_body TEXT,
	p_id INTEGER,
	a_id INTEGER,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TRIGGER timestamp_update_b BEFORE UPDATE ON sections BEGIN UPDATE sections SET updated_at = CURRENT_TIMESTAMP WHERE id = new.id;
END;

DROP TABLE IF EXISTS discussions;
CREATE TABLE discussions (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	d_body TEXT,
	p_id INTEGER, 
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS history;
CREATE TABLE history (
	id INTEGER PRIMARY KEY,
	p_id INTEGER,
	s_id INTEGER,
	a_id INTEGER,
	old_body TEXT,
	updated_on TEXT
);

DROP TABLE IF EXISTS subscribers;
CREATE TABLE subscribers (
	id INTEGER PRIMARY KEY AUTOINCREMENT,  
	subscriber_email TEXT,
	p_id INTEGER
);




